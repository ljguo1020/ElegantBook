\ProvideElegantMoudle{language}{ElegantLaTeX Language Moudle}


% \tl_new:N \g__elegant_language_tl 

\clist_new:N \g__elegant_language_clist


\prop_new:N \l__elegant_names_prop

\msg_new:nnn { elegant }{ not support language }
  {
    The~language~`#1'~is~not~support. \\
    Please~select~one~of~the~following~languages. \\
    \clist_use:Nn \g__elegant_language_clist {,~} 
  }


\cs_new_protected_nopar:Npn \elegant_declare_language:nn #1#2 
  {
    \tl_gset:cn { g_elegant_language_#1_tl } { #2 }
    \clist_gput_right:Nn \g__elegant_language_clist { #1 }
  }


\AtBeginDocument
  {
    \let \xeCJK@document@left@hook \relax
    \let \xeCJK@document@hook \relax
    \tl_if_exist:cTF { g_elegant_language_ \g__elegant_language_tl _tl }
    {
      \tl_use:c { g_elegant_language_ \g__elegant_language_tl _tl }
    }
    {
      % error / message
      \msg_error:nnx { elegant }{ not support language } { \g__elegant_language_tl }
    }
  }


\cs_new_protected_nopar:Npn \elegant_define_name:nn #1#2
  {
    \tl_set:cn { l__elegant_#1_name } { #2 }
  }

\cs_new_protected_nopar:Npn \elegant_define_name:n #1
  {
    \prop_set_from_keyval:Nn \l__elegant_names_prop { #1 }
    \prop_map_inline:Nn \l__elegant_names_prop 
      {
        \elegant_define_name:nn { ##1 }{ ##2 }
      }
  }

\cs_new_nopar:Npn \elegant_use_name:n #1 
  {
    \tl_if_exist_use:c { l__elegant_#1_name }
  }

\elegant_declare_language:nn { cn }
  {
    \RequirePackage[UTF8, fontset=none]{ctex}
    \elegant_define_name:n 
      {
        chapter / before  = 第,
        chapter / after = 章,
        chapter / number = \chinese{chapter},
        section / number = \thesection,
        subsection / number = \thesubsection,
        subsubsection / number = \thesubsubsection
      }
  }

\endinput